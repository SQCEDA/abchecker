// Generated from ConfigJSON.g4 by antlr-blockly

var grammarFile="grammar ConfigJSON;\n\nprog\n    :   '工作路径(一些配置信息将存在这里)' workDir=NormalString BGNL\n        '>配置已存在时可以只填工作路径并右键点加载配置' BGNL\n        '图片信息' BGNL imageInformation=imageInformationBlock+\n        '>图片信息填完后右键计算图片信息' BGNL\n        'GDS路径' gdsPath=NormalString BGNL\n        'KLayout路径' klayoutPath=NormalString BGNL\n        'ABWidth' ABWidth=Number BGNL\n        'ABHeight' ABHeight=Number BGNL\n        '>右键点从GDS提取AB信息' BGNL\n        '图片分支(暂时无效,锁定为1)' BGNL switchPosition=switchPositionBlock\n        '切片导出路径' pictureOutputDir=NormalString BGNL\n        '切图像素尺寸(暂时填200)' cutPixelSize=Number BGNL\n        '切图并行数(填1.5*cpu核数取整)' cutParallel=Number BGNL\n        '>右键点从图片切出AB' BGNL\n        '切图展示尺寸(暂时填140)' viewPixelSize=Number BGNL\n        '>右键点人工检查判断AB' BGNL\n/* prog\nmenu:[['test','window.testFunction?testFunction(block):0'],['保存配置','window.saveConfig?saveConfig(block):0'],['加载配置','window.loadConfig?loadConfig(block):0'],['计算图片信息','window.calculateImageInformation?calculateImageInformation(block):0'],['从GDS提取AB信息','window.extractABFromGDS?extractABFromGDS(block):0'],['从图片切出AB','window.extractMainProcess?extractMainProcess(block):0'],['人工检查判断AB','window.openHumanCheck?openHumanCheck(block):0'],]\n*/\n    ;\n\nimageInformationBlock\n    :   '目录(目录内不能包含照片外的文件和路径)' dir=NormalString BGNL\n        '配置文件名(建议取目录的最后一级)' config=NormalString BGNL\n        '坐标转换' BGNL positionTransfrom=positionTransfromBlock\n    ;\n\npositionTransfromBlock\n    :   '转换参数' 'A' A=Number 'B' B=Number 'C' C=Number 'D' D=Number 'E' E=Number 'F' F=Number\n    # transfromArgs\n/* transfromArgs\ndefault:['0','0','0','0','0','0']\n*/\n    |   '坐标组' BGNL\n        '设计图坐标 x,y 单位纳米' BGNL\n        '照片像素作标 m,n,p,q' BGNL\n        'm,n 是第m列切片, 第n行切片' BGNL\n        'p,q 是到左侧和顶部的像素数' BGNL\n        '(注意顺序是 nmpq 而不是 nmpq )' BGNL\n        positionPair=positionPairBlock+\n    # positionPairs\n    ;\n\npositionPairBlock\n    :   'n' n=Number 'm' m=Number 'p' p=Number 'q' q=Number '<->' 'x' x=Number 'y' y=Number \n/* positionPairBlock\ndefault:['1','1','0','0','0','0']\n*/\n    ;\n\nswitchPositionBlock\n    :   '使用 x,y 代表设计图内坐标, 按照分支进入指定图片' BGNL\n        '0 代表不处理, 1~n 对应该编号的图片' BGNL\n        switchPositionAction+\n    ;\n\nswitchPositionAction\n    :   '如果' condition=conditionExpr '则:' BGNL trueCase=switchPositionAction+ \n        '否则' BGNL falseCase=switchPositionAction+\n    # ifAction\n    |   '图片' pictureId=Int\n    # returnAction\n    ;\n\nstatExprSplit : '=== statement ^ === expression v ===' ;\n\nconditionExpr\n    :   a=conditionExpr op=OP_List b=conditionExpr\n    # opConditionExpr\n    |   a=NormalString\n    # valueConditionExpr\n/* valueConditionExpr\ndefault : ['x >= 0']\n*/\n    ;\n\nNormalString: ('asdsaw'+)*;\nOP_List:    'and'|'or' ;\n\nInt :   [0-9]+ ;\nNumber:   'asfvaswvr'* 'asdvaswvr'? ;\nBool:   'true'|'false' ;\nColour:   'asdfgdh'* ;\nBGNL:   'asfvaswvr'? 'asdvaswvr'? ;\n\nMeaningfulSplit : '=== meaningful ^ ===' ;\n\n/* Insert_FunctionStart\nvar endBlocks=[\n    \"switchPositionBlock\",\n    \"ifAction\",\n    \"returnAction\",\n    \"transfromArgs\",\n    \"positionPairs\",\n]\nendBlocks.forEach(blockname => {\n    ConfigJSONBlocks[blockname].json.nextStatement=undefined\n})\n\nsetTimeout(() => {\n    window.blocklyInitDone?blocklyInitDone():0\n}, 0)\n*/";
var option={"type":"option","defaultGenerating":"JSON","blocklyRuntime":{"type":"blocklyRuntimeStatement","path":"antlr-blockly/","files":"blockly_compressed.js, blocks_compressed.js, javascript_compressed.js, zh-hans.js"},"blocklyDiv":{"type":"fixedSizeBlocklyDiv","id":"blocklyDiv","height":"550px","width":"1000px"},"toolbox":{"type":"toolboxDefault","id":"toolbox","gap":5},"codeArea":{"type":"codeAreaStatement","output":"function(err,data){window.setBlocklyOutput?setBlocklyOutput(err,data):document.getElementById('codeArea').innerText=err?String(err):data}"},"target":{"type":"keepGrammar"}};
option.target.type="independentFile";
var converter = Converter.withOption(grammarFile,option);
var script = document.createElement('script');
script.innerHTML = converter.js.text();
document.body.appendChild(script);
